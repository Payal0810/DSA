/*

    Following is the Node class already written for the Linked List

    class Node<T> {
        T data;
        Node<T> next;
    
        public Node(T data) {
            this.data = data;
        }
    }

*/



public class Solution {
	
	public static Node<Integer> skipMdeleteN(Node<Integer> head, int M, int N) {
		//Your code goes here
 
        // edge case 
        if(head == null || M==0){
            return null;
        }

        // storing head in temperory variable 
        Node<Integer> temp = head;

        // traversing till end of linked list 
        while(temp!=null){
            
            // first loop for retaining M elements 
            for(int i=1; i<M && temp!=null; i++){
                temp = temp.next;
            }

            if(temp==null){
                break;
            }
            
            Node<Integer> curr = temp.next;

            // second loop for removing N elements 
            for(int j=1; j<=N && curr!=null; j++){
                curr = curr.next;
            }

            // now connect previous node at Mth position to Nth node 
            temp.next = curr;
            temp = curr;
        }
        return head;
	}
}
