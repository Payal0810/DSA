import java.util.HashMap;

public class Solution {

	public static int getPairsWithDifferenceK(int arr[], int k) {
		//Write your code here

		// HashMap to store the frequencies of array elements
        HashMap<Integer, Integer> map = new HashMap<>();
        
        // Storing array elements with their frequencies 
        for (int i : arr) {
            if (map.containsKey(i)) {
                map.put(i, map.get(i) + 1);
            } else {
                map.put(i, 1);
            }
        }

        // Counter to keep track of pairs 
        int count = 0;

        // Checking for pairs 
        for (int i : arr) {
            int freq = map.get(i);
            if (freq > 0) {
               // Special case when k = 0 (count same elements as pairs)
                if (k == 0) {
                    // Number of pairs that can be formed from freq occurrences
                    count += (freq * (freq - 1)) / 2;
                    map.put(i, 0); // Set to 0 as all pairs are counted
                } else {
                    // Check for pairs with difference k
                    if (map.containsKey(i + k) && map.get(i + k) > 0) {
                        count += map.get(i + k);  // Adding the number of occurrences
                    }
                    
                    // If k is not 0, also check for pairs with i - k
                    if (map.containsKey(i - k) && map.get(i - k) > 0) {
                        count += map.get(i - k);  // Adding the number of occurrences
                    }

                    // Mark the current element as processed by reducing its frequency
                    map.put(i, freq - 1);
            }
			
        }

		
		}

		return count;
	}
}

        
