class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        
        int m = nums1.length;
        int n = nums2.length;

        // creating new merged array 
        int[] merged = new int[m+n];

        // pointers for all three arrays 
        int i = 0;
        int j = 0;
        int k = 0;

        while(i<m && j<n){
            if(nums1[i]<nums2[j]){
                merged[k] = nums1[i];
                i++;
            }
            else{
                merged[k] = nums2[j];
                j++;
            }
            k++;
        }

        // checking remaining elements in nums1 
        while(i<m){
            merged[k] = nums1[i];
            i++;
            k++;
        }

        // checking remaining elements in nums1 
        while(j<n){
            merged[k] = nums2[j];
            j++;
            k++;
        }

        // now calculating median
        double median = 0;

        if((m+n) % 2 == 0){
            int mid = (m+n)/2;
            median = (merged[mid]+ merged[mid-1])/2.0;
        }
        else{
            int mid = (m+n)/2;
            median = merged[mid];
        }

        return median;
    }
}
